// Generated by CoffeeScript 1.7.1
(function() {
  var Instruction,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Instruction = (function() {
    function Instruction() {
      this.keyword = '';
      this.parameter = [];
    }

    return Instruction;

  })();

  window.Parser = (function() {
    function Parser() {
      this.parse = __bind(this.parse, this);
      this.read = __bind(this.read, this);
      this.source = '';
      this.instructions = [];
    }

    Parser.prototype.read = function(terms, index) {
      var instruction;
      instruction = new Instruction;
      switch (terms[index].toUpperCase()) {
        case 'FORWARD':
        case 'FD':
        case 'BACK':
        case 'BK':
        case 'LEFT':
        case 'LT':
        case 'RIGHT':
        case 'RT':
          instruction.keyword = terms[index].toUpperCase();
          instruction.parameter.push(terms[index + 1]);
          this.instructions.push(instruction);
          index += 2;
          break;
        default:
          return;
      }
      if (index < terms.length) {
        return this.read(terms, index);
      }
    };

    Parser.prototype.parse = function(source) {
      var terms;
      this.source = source;
      this.instructions = [];
      terms = this.source.split(/[\s\n\t]+/);
      this.read(terms, 0);
      return this.instructions;
    };

    return Parser;

  })();

}).call(this);
