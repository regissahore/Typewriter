(load "3.17.scm")
(define (loop? lst)
  (define (exist? x lst)
    (cond ((null? lst) false)
          ((eq? x (car lst)) true)
          (else (exist? x (cdr lst)))))
  (define (insert x lst)
    (append lst (list x)))
  (define (iter lst h)
    (cond ((null? lst) false)
          ((exist? (car lst) h) true)
          (else (iter (cdr lst) (append h (list (car lst)))))))
  (iter lst (list)))