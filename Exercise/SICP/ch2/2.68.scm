(load "2.67.scm")
(define (encode message tree)
  (if (null? message)
      '()
      (append (encode-symbol (car message) tree)
              (encode (cdr message) tree))))
(define (encode-symbol symbol tree)
  (cond ((leaf? tree) '())
        ((symbol-in-tree? symbol (left-branch tree))
         (cons 0 (encode-symbol symbol (left-branch tree))))
        ((symbol-in-tree? symbol (right-branch tree))
         (cons 1 (encode-symbol symbol (right-branch tree))))
        (else (error "Encode-symbol"))))
(define (symbol-in-tree? symbol tree)
  (define (find symbol lst)
    (cond ((null? lst) false)
          ((eq? symbol (car lst)) true)
          (else (find symbol (cdr lst)))))
  (find symbol (symbols tree)))