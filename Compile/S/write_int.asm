WRITE_INT:
    MOV SI, 0
    MOV CX, BX
    LEA BX, INPUT_BUFFER[SI]
    MOV BYTE PTR [BX], 0
WRITE_LOOP:
    AND CX, CX
    JZ WRITE_OUT
    MOV DX, 0
    MOV AX, CX
    MOV CX, 10
    DIV CX
    ADD DL, 30H
    LEA BX, INPUT_BUFFER[SI]
    MOV BYTE PTR [BX], DL
    MOV CX, AX
    INC SI
    JMP WRITE_LOOP
WRITE_OUT:
    CMP SI, 0
    JE WRITE_ZERO
    MOV AH, 02H
WRITE_NORMAL:
    CMP SI, 0
    JBE WRITE_NEWLINE
    DEC SI
    LEA BX, INPUT_BUFFER[SI]
    MOV DL, BYTE PTR [BX]
    INT 21H
    JMP WRITE_NORMAL
WRITE_ZERO:
    MOV AH, 02H
    MOV DL, 30H
    INT 21H
